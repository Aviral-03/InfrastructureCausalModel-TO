---
title: "dump"
format: html
editor: visual
---

# Introduction

Overview paragraph

Estimand paragraph

Results paragraph

Why it matters paragraph

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....

# Data {#sec-data}

## Overview

We use the statistical programming language R [@citeR].... Our data [@shelter].... Following @tellingstories, we consider...

Overview text

## Measurement

Some paragraphs about how we go from a phenomena in the world to an entry in the dataset.

## Outcome variables

## Predictor variables

Add graphs, tables and text.

Use sub-sub-headings for each outcome variable and feel free to combine a few into one if they go together naturally.

# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.

### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.

# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```

# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this.

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {.unnumbered}

# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows...

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```

```{r}
install.packages("tinytable")
```

```{r}
#| include: false
#| warning: false
#| message: false

library(boot)
library(janitor)
library(modelsummary)
library(rstanarm)
library(tidyverse)
library(collapse)
library(tinytable)
library(marginaleffects)
library(rstanarm)
library(bayesplot)
```

```{r}
analysis_budget_data <- read.csv(here::here("data/02-analysis_data/analysis_budget_data.csv"))
analysis_building_permits <- read.csv(here::here("data/02-analysis_data/analysis_building_permits.csv"))
analysis_ward_data <- read.csv(here::here("data/02-analysis_data/analysis_ward_data.csv"))

# combine all the years data for each ward and for each category
model_data <- analysis_budget_data |>
  group_by(ward_id, category, ward) |>
  summarise(avg_total_10_year = mean(total_10_year)) |>
  pivot_wider(names_from = category, values_from = avg_total_10_year) |>
  # sum the total 10 year budget for each ward
  group_by(ward_id, ward) |>
  summarise(total_budget = sum(`Growth Related`, `State of Good Repair`, `Service Improvement and Enhancement`))

# combine the model data with the ward profile data
model_data <- model_data |>
  left_join(analysis_ward_data, by = "ward_id") |>
  select(ward_id, ward.x, total_budget, average_household_income, population) |>
  rename(ward = ward.x) |>
  # left join with the building permits data
  left_join(analysis_building_permits, by = "ward_id") |>
  select(ward_id, ward, total_budget, average_household_income, population, total_building_permits)
```

```{r}

# convert the ward_id to a factor
model_data$ward_id <- as.factor(model_data$ward_id)

model <- stan_glm(
  formula = total_building_permits ~ total_budget + average_household_income + population + ward_id,
  data = model_data,
  family = gaussian(link = "identity"),
  prior = normal(location = 0, scale = 2.5, autoscale = TRUE),
  prior_intercept = normal(location = 0, scale = 2.5, autoscale = TRUE)
)

# Summarize model output
summary(model)

# Posterior predictive checks
pp_check(model)

# Plot the coefficient estimates
plot(model)

# Credible intervals
posterior_interval(model)

# Visualize posterior distributions
mcmc_areas(model)

# Predictive performance
# Compare observed vs. predicted
predicted_permits <- posterior_predict(model)

# plot diagnostics
plot(model, "trace")
plot(model, "rhat")

modelsummary(
  list(
    "Model" = model
  ),
)
```

```{r}

```
